sudo -u postgres psql
psql -h '127.0.0.1' -U jhon -d postgres
python manage.py shell
from app1.models import Categoria
qs = Categoria.objects.all()
qs
str(qs.query) #Ver Query a la DB
qs=Categoria.objects.filter(descripcion__startswith='p') | Categoria.objects.filter(descripcion__startswith='b')

from django.db.models import Q

Consultas OR
qs=Categoria.objects.filter(Q(descripcion__startswith='p') | Q(descripcion__startswith='b'))

Consultas AND
*qs=Categoria.objects.filter(descripcion__startswith='p',activo=True)
*qs=Categoria.objects.filter(descripcion__startswith='p') & Categoria.objects.filter(activo=True)

Consultas NOT
qs=Categoria.objects.exclude(id='2')
qs=Categoria.objects.filter(~Q(id='2'))

consultas UNION
q1.union(q2)
Categoria.objects.all().values_list("id","description").union(SubCategoria.objects.all().values_list("id","description"))

SUBQUERY
from django.db.models import Subquery
Categoria.objects.filter(id__in=Subquery(scat.values('categoria_id')))
Categoria.objects.filter(id__in=Subquery(scat.values('categoria_id'))).values('id','descripcion')

JOIN
qs=SubCategoria.objects.selected_related('categoria')
qs=SubCategoria.objects.filter(categoria__descripcion='Python')

AGRUPAR REGISTROS
from django.db.models import Avg,Max,Min,Sum,Count
Categoria.objects.all().aggregate(Avg("id"))
Categoria.objects.all().count()

Categoria.objects.create(descripcion="L y L")

Categoria.objects.bulk_create([Categoria(descripcion="Redes",Categoria(descripcion="Matematicas"),Categoria(descripcion="Fisica"))])

cat = Categoria.objects.first()
cat.pk = None
cat.save()

Categoria.objects.filter(descripcion='Fisica').update(descripcion='Fisicia')

Unico.objects.all().delete()

ORDENAR QUERY'S
Categoria.objects.all().order_by('id')
Categoria.objects.all().order_by('-id')

Categoria.objects.all().order_by('descripcion').values_list('descripcion', flat=True)
from django.db.models import Lower
Categoria.objects.all().order_by(Lower('descripcion')).values_list('descripcion', flat=True)
Categoria.objects.annotate(Lower(lowdest='descripcion')).order_by('descripcion').values_list('descripcion', flat=True)

MODELO RELACIONADO POR LA LLAVE EXTRANJERA
SubCategoria.objects.all().order_by('categoria__descripcion').values_list('id','descripcion','categoria_id')

CAMPOS ANNOTATE
from django.db.models import count
Categoria.objects.annotate(conteo=Count('SubCategoria'))

CONVERTIR BASE DE DATOS EXISTENTE
manage.py inspectdb
manage.py inspectdb > modelos.py

VISTA A PARTIR DE MODELO
manage.py dbshell
\dt
select * from app1_categoria;
create view categoria_view as select id,descripcion from app1_categoria;
select * from categoria_view;

